---
- include: preflight.yml
- include: packages-{{ ansible_pkg_mgr }}.yml

- name: Create Caddy user
  user:
    name: "{{ caddy_user }}"
    system: true
    createhome: true
    home: "{{ caddy_home }}"
  register: caddy_user_details

- name: Build headers to use when making requests to github
  set_fact:
    caddy_github_headers: "{{ caddy_github_headers | combine({'Authorization': 'token ' + caddy_github_token}) }}"
  when: caddy_github_token | length > 0

- name: Ensure latest Caddy
  when: caddy_update
  block:
    - name: Vanilla Caddy
      when: caddy_use_github
      block:
        - name: Get latest Caddy statble release
          uri:
            url: https://api.github.com/repos/caddyserver/caddy/releases/latest
          register: latest_caddy_release
        - name: Set latest Caddy version
          set_fact:
            latest_caddy_version: "{{ latest_caddy_release.json.tag_name }}"
    - name: Custom Caddy
      when: not caddy_use_github
      block:
        - name: Get Caddy tags
          uri:
            url: https://api.github.com/repos/caddyserver/caddy/tags
          register: caddy_tags
        - name: Set latest Caddy version
          set_fact:
            latest_caddy_version: "{{ caddy_tags.json[0].name }}"
    - name: Get installed Caddy version
      shell: caddy version | awk '{print $1}'
      register: installed_caddy_version
      changed_when: false
      failed_when: false
    - name: Set Caddy features
      copy:
        content: "{{ ','.join(caddy_packages) }}"
        dest: "{{ caddy_home }}/features.txt"
        mode: 0640
        owner: "{{ caddy_user }}"
        group: "{{ caddy_user_details.group }}"
      register: caddy_features_cache
    - name: Update Caddy
      when: latest_caddy_version != installed_caddy_version.stdout or caddy_features_cache.changed
      block:
        - name: Set Caddy urls
          when: caddy_use_github
          set_fact:
            caddy_url: "https://github.com/caddyserver/caddy/releases/download/{{ latest_caddy_version }}/\
                        caddy_{{ latest_caddy_version|trim('v') }}_{{ caddy_os }}_{{ go_arch }}.tar.gz"
        - name: Download & Extract Caddy
          unarchive:
            src: "{{ caddy_url }}"
            dest: "{{ caddy_home }}"
            remote_src: true
            mode: 0644
            owner: "{{ caddy_user }}"
            group: "{{ caddy_user_details.group }}"
        - name: Copy Caddy Binary
          copy:
            src: "{{ caddy_home }}/caddy"
            dest: "{{ caddy_bin }}"
            mode: 0755
            remote_src: true
          notify:
            - Restart caddy

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ caddy_user }}"
    mode: 0770
  with_items:
    - "{{ caddy_conf_dir }}"
    - "{{ caddy_certs_dir }}"

- name: Create log directory
  file:
    path: "{{ caddy_log_dir }}"
    state: directory
    owner: "{{ caddy_user }}"
    mode: 0775

- name: Create caddy config
  copy:
    content: "{{ caddy_config }}"
    dest: "{{ caddy_conf_dir }}/{{ caddy_conf_filename }}"
    owner: "{{ caddy_user }}"
    mode: 0640
  notify:
    - Reload caddy

- name: Template systemd service
  template:
    src: caddy.service
    dest: /etc/systemd/system/caddy.service
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart caddy

- name: Set capability on the binary file to be able to bind to TCP port <1024
  capabilities:
    path: "{{ caddy_bin }}"
    capability: cap_net_bind_service+eip
    state: present
  when: caddy_setcap

- name: Ensue caddy service is up-to-date before starting it
  meta: flush_handlers

- name: Start Caddy service
  systemd:
    name: caddy
    state: started
    enabled: true
